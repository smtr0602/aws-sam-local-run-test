AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda local demo

Resources:
  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/ # {projectPath}/
      Handler: index.handler # {filename.functionName}
      Runtime: nodejs14.x
      Timeout: 10 # lambda fails after
      Layers: # add this if working with lambda layer
        - <ARN-of-lambda-layer-here>
        - !REF MyLayer # use local layer

  MyFunctionWithAPIGateway:
    Type: AWS::Serverless::Function
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"
    Properties:
      CodeUri: src/ # {projectPath}/
      Handler: index.handler # {filename.functionName}
      Runtime: nodejs14.x
      Timeout: 10 # lambda fails after
      Layers: # add this if working with lambda layer
        - <ARN-of-lambda-layer-here>
        - !REF MyLayer # use local layer
      Events:
        MyTestEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
            Auth:
              Authorizer: arn:aws:cognito-idp:<region>:<account>:userpool/<userPoolId>
              AddDefaultAuthorizerToCorsPreflight: true

  MyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: <layer-name>
      ContentUri: <layer-directory>/lib/nodejs # where package.json is located
      CompatibleRuntimes:
        - nodejs14.x
    Metadata:
      BuildMethod: nodejs14.x
